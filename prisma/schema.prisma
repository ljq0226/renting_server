// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  LANDLORD
  ADMIN
  VISITOR
}

enum PriceType {
  DAILY
  WEEKLY
  MONTHLY
  QUARTERLY
  YEARLY
}

model Tenant {
  id        String   @id @default(uuid())
  username  String   @unique @default("visitor")
  password  String
  avatar    String   @default("")
  role      UserRole @default(VISITOR)
  phone     String   @default("")
  cardId    String   @default("") // 身份证
  realname  String   @default("") //真实姓名
  isUpdate  Boolean  @default(false) //是否已上传个人信息
  gender    Int      @default(1)
  createdAt DateTime @default(now())
  Review    Review[]
}

model Landlord {
  id          String   @id @default(uuid())
  username    String   @unique @default("landlord")
  password    String
  avatar      String   @default("")
  role        UserRole @default(LANDLORD)
  phone       String   @default("")
  email       String   @default("")
  description String?  @default("")
  cardId      String   @default("") // 身份证
  realname    String   @default("") //真实姓名
  signature   String?  @default("") //个人电子签名
  isUpdate    Boolean  @default(false) //是否已上传个人信息
  createdAt   DateTime @default(now())
  Review      Review[]
}

model Admin {
  id        String   @id @default(uuid())
  username  String   @unique @default("admin")
  password  String
  avatar    String   @default("")
  role      UserRole @default(ADMIN)
  createdAt DateTime @default(now())
}

model Listing {
  id                String         @id @default(uuid())
  title             String
  description       String
  price             Int
  deposit           Int            @default(0)
  cover             String
  images            String
  isChecked         Int            @default(0) //0 未审核 1审核通过 2审核不通过
  keywords          String         @default("")
  city              String // 城市
  address           String
  code              String //经纬度
  status            Int            @default(0) // 是否已经在租
  priceType         PriceType      @default(MONTHLY)
  rentType          Int // 类型 (0整租, 1合租)
  roomCount         Int // 室数
  bathroomCount     Int // 卫生间数
  livingroomCount   Int // 厅数
  area              Int // 面积 (30m²)
  direction         String // 朝向 (南, 东, 西, 北)
  floor             Int //楼层  
  totalFloor        Int // 总楼层
  buildYear         Int // 建筑年份
  bedroomFacilities String // 室内设施
  advantage         String // 优势
  availableFrom     DateTime // 可租赁的开始日期
  availableUntil    DateTime // 可租赁的结束日期
  nearbyInfo        String // 附近
  isShortTermRental Boolean        @default(false) //是否短租
  retailRecord      RetailRecord[] //零售记录
  about             String         @default("") //房源概况
  listingIntro      String         @default("") //房源介绍
  tenantPermission  String         @default("") //房客使用权限
  others            String         @default("") //其他注意事项
  landlordId        String //房东 id
  createdAt         DateTime       @default(now())
  updatedAt         DateTime       @updatedAt
  Review            Review[]
  Order             Order[]
  Contract          Contract[]
}

model RetailRecord {
  id         String   @id @default(uuid())
  price      Int
  tenantId   String
  landlordId String
  startTime  DateTime
  endTime    DateTime
  remarks    String?  @default("") //备注
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  listing    Listing  @relation(fields: [listingId], references: [id])
  listingId  String
}

model Review {
  id         String    @id @default(uuid())
  content    String
  rating     Rating?
  ratingId   Int
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  Tenant     Tenant?   @relation(fields: [tenantId], references: [id])
  tenantId   String?
  Landlord   Landlord? @relation(fields: [landlordId], references: [id])
  landlordId String?
  Listing    Listing?  @relation(fields: [listingId], references: [id])
  listingId  String?
}

model Rating {
  id            Int    @id @default(autoincrement())
  cleanliness   Float // 干净卫生
  description   Float // 如实描述
  checkIn       Float // 入住便捷
  communication Float // 沟通顺畅
  location      Float // 地段优越
  value         Float // 高性价比
  totalScore    Float // 总评分
  listingId     String
  review        Review @relation(fields: [reviewId], references: [id])
  reviewId      String @unique
}

model Order {
  id           String    @id @default(uuid())
  ordername    String // 订单名称
  price        Int
  priceType    PriceType @default(MONTHLY)
  totalPrice   Int
  status       Int // 0未支付 1已支付 2已取消
  tenantId     String
  tenantName   String
  landlordId   String
  landlordName String
  contractId   String?   @unique
  contract     Contract?
  listingId    String
  listingTitle String
  listing      Listing   @relation(fields: [listingId], references: [id])
  startTime    DateTime //租住开始时间
  endTime      DateTime //租住结束时间
  createdTime  DateTime  @default(now())
}

model Contract {
  id           String   @id @default(uuid())
  url          String
  title        String
  status       Int      @default(0) // 合同状态(1契约内 0契约外)
  createTime   DateTime @default(now())
  tenantId     String
  landlordId   String
  listingId    String
  listingTitle String
  listing      Listing  @relation(fields: [listingId], references: [id])
  Order        Order    @relation(fields: [orderId], references: [id])
  orderId      String   @unique
}
